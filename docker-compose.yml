version: "3.1"

services:

  rabbit:
    image: rabbitmq:3.8-management-alpine
    ports:
      # Expose the RabbitMQ management UI
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: rabbit
      RABBITMQ_DEFAULT_PASS: rabbit

  postgres:
    image: postgres:9.6-alpine
    ports:
      - '5432:5432'
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust 
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dagster_celery

  minio:
    image: minio/minio:RELEASE.2020-08-16T18-39-38Z
    ports:
      - '9000:9000'
    volumes:
      - ./.minio:/data
    environment:
      MINIO_ACCESS_KEY: 'minio'
      MINIO_SECRET_KEY: 'miniosecret'
    command: 'server /data'

  # generic worker
  worker-generic:
    build: .
    image: dagster-celery-worker
    volumes:
      - ./workflows:/app
    entrypoint: "dagster-celery worker start --loglevel=info --app=dagster_celery.app -y celeryconfig.yaml"
    environment: 
      DAGSTER_HOME: /app

  # GPU worker (doesn't really use the GPU, just demonstrates worker selection from solids)
  worker-gpu:
    build: .
    image: dagster-celery-worker
    volumes:
      - ./workflows:/app
    entrypoint: "dagster-celery worker start --loglevel=info --app=dagster_celery.app -y celeryconfig.yaml -q gpu"
    environment: 
      DAGSTER_HOME: /app

  dagit:
    build: .
    image: dagster-celery-worker # Use the worker image for convenience
    ports:
      - 3000:3000 # Dagit
    volumes:
      - ./workflows:/app
    entrypoint: dagit --host 0.0.0.0 -f dagster_pipeline.py
    environment: 
      DAGSTER_HOME: /app
          
    